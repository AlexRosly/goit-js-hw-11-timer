{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","time","message","CountdownTimer","constructor","selector","targetDate","setInterval","currentTime","Date","now","getTimeComponents","finishTime","pad","Math","floor","textContent","value","String","padStart","clearInterval","intervalId","classList","add"],"mappings":";;;AAoDA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EApDA,QAAA,oBAEA,MAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,uBAC7BI,KAAML,SAASC,cAAc,UAC7BK,QAASN,SAASC,cAAc,sBAGpC,MAAMM,EAEJC,aAAY,SAAEC,EAAF,WAAYC,IAMXC,EAAAA,KAAAA,aAAAA,YAAY,KACjBC,MAAAA,EAAcC,KAAKC,MACnBT,EAAO,KAAKK,WAAaE,EAC1BG,KAAAA,kBAAkBV,GAClBW,KAAAA,WAAWX,IACf,MAVII,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAWpBK,kBAAkBV,GACVN,MAAAA,EAAO,KAAKkB,IAAIC,KAAKC,MAAMd,EAAQ,QACnCH,EAAQ,KAAKe,IAAIC,KAAKC,MAAOd,EAAQ,MAAyB,OAC9DF,EAAO,KAAKc,IAAIC,KAAKC,MAAOd,EAAQ,KAAoB,MACxDD,EAAO,KAAKa,IAAIC,KAAKC,MAAOd,EAAQ,IAAc,MACxDP,EAAKC,KAAKqB,eAAiBrB,IAC3BD,EAAKI,MAAMkB,eAAiBlB,IAC5BJ,EAAKK,KAAKiB,eAAiBjB,IAC3BL,EAAKM,KAAKgB,eAAiBhB,IAG7Ba,IAAII,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCP,WAAWX,GACLA,EAAO,IACTmB,cAAc,KAAKC,YACnB3B,EAAKO,KAAKqB,UAAUC,IAAI,UACxB7B,EAAKQ,QAAQoB,UAAUC,IAAI,aAOjC,IAAIpB,EAAe,CACjBE,SAAU,WACVC,WAAY,IAAIG,KAAK","file":"src.ed48b33f.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n    days: document.querySelector('[data-value=\"days\"]'),\n    hours: document.querySelector('[data-value=\"hours\"]'),\n    mins: document.querySelector('[data-value=\"mins\"]'),\n    secs: document.querySelector('[data-value=\"secs\"]'),\n    time: document.querySelector('.timer'),\n    message: document.querySelector('.deadline-message')\n}\n\nclass CountdownTimer {\n\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n   \n  }\n\n  intervalid = setInterval(() => {\n    const currentTime = Date.now();\n    const time = this.targetDate - currentTime;\n    this.getTimeComponents(time);\n    this.finishTime(time);\n  }, 1000);\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n  }\n  \n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n  finishTime(time) {\n    if (time < 0) {\n      clearInterval(this.intervalId);\n      refs.time.classList.add(\"hidden\");\n      refs.message.classList.add(\"visible\");\n\n    }\n  }\n}\n\n\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 31, 2021'),\n});\n\n"]}